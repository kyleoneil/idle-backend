{"message":"{\"message\":\"No authorization token was found\",\"statusCode\":401}","level":"error","timestamp":"2020-11-19T03:25:23.114Z"}
{"name":"UnauthorizedError","message":"No authorization token was found","code":"credentials_required","status":401,"inner":{"message":"No authorization token was found"},"level":"error","timestamp":"2020-11-19T03:25:23.124Z"}
{"message":"{\"message\":\"No authorization token was found\",\"statusCode\":401}","level":"error","timestamp":"2020-11-19T03:26:06.487Z"}
{"name":"UnauthorizedError","message":"No authorization token was found","code":"credentials_required","status":401,"inner":{"message":"No authorization token was found"},"level":"error","timestamp":"2020-11-19T03:26:06.489Z"}
{"message":"{\"message\":\"No authorization token was found\",\"statusCode\":401}","level":"error","timestamp":"2020-11-19T03:26:21.919Z"}
{"name":"UnauthorizedError","message":"No authorization token was found","code":"credentials_required","status":401,"inner":{"message":"No authorization token was found"},"level":"error","timestamp":"2020-11-19T03:26:21.921Z"}
{"message":"{\"message\":\"No authorization token was found\",\"statusCode\":401}","level":"error","timestamp":"2020-11-19T03:27:18.651Z"}
{"name":"UnauthorizedError","message":"No authorization token was found","code":"credentials_required","status":401,"inner":{"message":"No authorization token was found"},"level":"error","timestamp":"2020-11-19T03:27:18.654Z"}
{"message":"{\"message\":\"No authorization token was found\",\"statusCode\":401}","level":"error","timestamp":"2020-11-19T03:27:50.204Z"}
{"name":"UnauthorizedError","message":"No authorization token was found","code":"credentials_required","status":401,"inner":{"message":"No authorization token was found"},"level":"error","timestamp":"2020-11-19T03:27:50.428Z"}
{"message":"{\"message\":\"No authorization token was found\",\"statusCode\":401}","level":"error","timestamp":"2020-11-19T03:30:15.457Z"}
{"name":"UnauthorizedError","message":"No authorization token was found","code":"credentials_required","status":401,"inner":{"message":"No authorization token was found"},"level":"error","timestamp":"2020-11-19T03:30:15.462Z"}
{"message":"{\"message\":\"User with email and password not found\",\"statusCode\":401}","level":"error","timestamp":"2020-11-19T03:47:08.808Z"}
{"name":"","status":401,"level":"error","message":"undefined","timestamp":"2020-11-19T03:47:08.817Z"}
{"message":"{\"message\":\"User with email and password not found\",\"statusCode\":401}","level":"error","timestamp":"2020-11-19T03:47:44.164Z"}
{"name":"","status":401,"level":"error","message":"undefined","timestamp":"2020-11-19T03:47:44.166Z"}
{"message":"{\"message\":\"User with email and password not found\",\"statusCode\":401}","level":"error","timestamp":"2020-11-19T03:48:11.646Z"}
{"name":"","status":401,"level":"error","message":"undefined","timestamp":"2020-11-19T03:48:11.651Z"}
{"message":"{\"message\":\"Format is Authorization: Bearer [token]\",\"statusCode\":401}","level":"error","timestamp":"2020-11-19T03:54:03.240Z"}
{"name":"UnauthorizedError","message":"Format is Authorization: Bearer [token]","code":"credentials_bad_format","status":401,"inner":{"message":"Format is Authorization: Bearer [token]"},"level":"error","timestamp":"2020-11-19T03:54:03.250Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-19T03:54:37.226Z"}
{"message":"{\"message\":\"Cannot read property 'id' of null\",\"statusCode\":500}","level":"error","timestamp":"2020-11-19T03:54:37.230Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-19T03:54:37.235Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-19T03:57:56.984Z"}
{"message":"{\"message\":\"Cannot read property 'id' of null\",\"statusCode\":500}","level":"error","timestamp":"2020-11-19T03:57:56.987Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-19T03:57:56.989Z"}
{"name":"SequelizeDatabaseError","parent":{"fatal":false,"errno":1054,"sqlState":"42S22","code":"ER_BAD_FIELD_ERROR","sql":"SELECT `User`.`id`, `User`.`email`, `User`.`password`, `User`.`name`, `User`.`birthdate`, `User`.`token`, `User`.`last_login` AS `lastLogin`, `User`.`created_at` AS `createdAt`, `User`.`updated_at` AS `updatedAt`, `User`.`role_id` AS `RoleId`, `Role`.`id` AS `Role.id`, `Role`.`name` AS `Role.name`, `Role`.`active` AS `Role.active`, `Role`.`created_at` AS `Role.createdAt`, `Role`.`updated_at` AS `Role.updatedAt` FROM `users` AS `User` LEFT OUTER JOIN `roles` AS `Role` ON `User`.`role_id` = `Role`.`id` WHERE `User`.`email` = 'admin@idle.com';"},"original":{"fatal":false,"errno":1054,"sqlState":"42S22","code":"ER_BAD_FIELD_ERROR","sql":"SELECT `User`.`id`, `User`.`email`, `User`.`password`, `User`.`name`, `User`.`birthdate`, `User`.`token`, `User`.`last_login` AS `lastLogin`, `User`.`created_at` AS `createdAt`, `User`.`updated_at` AS `updatedAt`, `User`.`role_id` AS `RoleId`, `Role`.`id` AS `Role.id`, `Role`.`name` AS `Role.name`, `Role`.`active` AS `Role.active`, `Role`.`created_at` AS `Role.createdAt`, `Role`.`updated_at` AS `Role.updatedAt` FROM `users` AS `User` LEFT OUTER JOIN `roles` AS `Role` ON `User`.`role_id` = `Role`.`id` WHERE `User`.`email` = 'admin@idle.com';"},"sql":"SELECT `User`.`id`, `User`.`email`, `User`.`password`, `User`.`name`, `User`.`birthdate`, `User`.`token`, `User`.`last_login` AS `lastLogin`, `User`.`created_at` AS `createdAt`, `User`.`updated_at` AS `updatedAt`, `User`.`role_id` AS `RoleId`, `Role`.`id` AS `Role.id`, `Role`.`name` AS `Role.name`, `Role`.`active` AS `Role.active`, `Role`.`created_at` AS `Role.createdAt`, `Role`.`updated_at` AS `Role.updatedAt` FROM `users` AS `User` LEFT OUTER JOIN `roles` AS `Role` ON `User`.`role_id` = `Role`.`id` WHERE `User`.`email` = 'admin@idle.com';","level":"error","message":"undefined","timestamp":"2020-11-22T11:50:52.148Z"}
{"message":"{\"message\":\"(conn=368, no: 1054, SQLState: 42S22) Unknown column 'User.birthdate' in 'field list'\\nsql: SELECT `User`.`id`, `User`.`email`, `User`.`password`, `User`.`name`, `User`.`birthdate`, `User`.`token`, `User`.`last_login` AS `lastLogin`, `User`.`created_at` AS `createdAt`, `User`.`updated_at` AS `updatedAt`, `User`.`role_id` AS `RoleId`, `Role`.`id` AS `Role.id`, `Role`.`name` AS `Role.name`, `Role`.`active` AS `Role.active`, `Role`.`created_at` AS `Role.createdAt`, `Role`.`updated_at` AS `Role.updatedAt` FROM `users` AS `User` LEFT OUTER JOIN `roles` AS `Role` ON `User`.`role_id` = `Role`.`id` WHERE `User`.`email` = 'admin@idle.com'; - parameters:[]\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T11:50:52.149Z"}
{"name":"SequelizeDatabaseError","parent":{"fatal":false,"errno":1054,"sqlState":"42S22","code":"ER_BAD_FIELD_ERROR","sql":"SELECT `User`.`id`, `User`.`email`, `User`.`password`, `User`.`name`, `User`.`birthdate`, `User`.`token`, `User`.`last_login` AS `lastLogin`, `User`.`created_at` AS `createdAt`, `User`.`updated_at` AS `updatedAt`, `User`.`role_id` AS `RoleId`, `Role`.`id` AS `Role.id`, `Role`.`name` AS `Role.name`, `Role`.`active` AS `Role.active`, `Role`.`created_at` AS `Role.createdAt`, `Role`.`updated_at` AS `Role.updatedAt` FROM `users` AS `User` LEFT OUTER JOIN `roles` AS `Role` ON `User`.`role_id` = `Role`.`id` WHERE `User`.`email` = 'admin@idle.com';"},"original":{"fatal":false,"errno":1054,"sqlState":"42S22","code":"ER_BAD_FIELD_ERROR","sql":"SELECT `User`.`id`, `User`.`email`, `User`.`password`, `User`.`name`, `User`.`birthdate`, `User`.`token`, `User`.`last_login` AS `lastLogin`, `User`.`created_at` AS `createdAt`, `User`.`updated_at` AS `updatedAt`, `User`.`role_id` AS `RoleId`, `Role`.`id` AS `Role.id`, `Role`.`name` AS `Role.name`, `Role`.`active` AS `Role.active`, `Role`.`created_at` AS `Role.createdAt`, `Role`.`updated_at` AS `Role.updatedAt` FROM `users` AS `User` LEFT OUTER JOIN `roles` AS `Role` ON `User`.`role_id` = `Role`.`id` WHERE `User`.`email` = 'admin@idle.com';"},"sql":"SELECT `User`.`id`, `User`.`email`, `User`.`password`, `User`.`name`, `User`.`birthdate`, `User`.`token`, `User`.`last_login` AS `lastLogin`, `User`.`created_at` AS `createdAt`, `User`.`updated_at` AS `updatedAt`, `User`.`role_id` AS `RoleId`, `Role`.`id` AS `Role.id`, `Role`.`name` AS `Role.name`, `Role`.`active` AS `Role.active`, `Role`.`created_at` AS `Role.createdAt`, `Role`.`updated_at` AS `Role.updatedAt` FROM `users` AS `User` LEFT OUTER JOIN `roles` AS `Role` ON `User`.`role_id` = `Role`.`id` WHERE `User`.`email` = 'admin@idle.com';","level":"error","message":"undefined","timestamp":"2020-11-22T11:50:52.150Z"}
{"message":"{\"message\":\"jwt expired\",\"statusCode\":401}","level":"error","timestamp":"2020-11-22T11:51:23.971Z"}
{"name":"UnauthorizedError","message":"jwt expired","code":"invalid_token","status":401,"inner":{"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2020-11-22T10:08:16.000Z"},"level":"error","timestamp":"2020-11-22T11:51:23.972Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-11-22T11:51:26.899Z"}
{"message":"{\"message\":\"API does not exist.\",\"statusCode\":404}","level":"error","timestamp":"2020-11-22T11:51:26.900Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-11-22T11:51:26.900Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:52:10.497Z"}
{"message":"{\"message\":\"Services.updateQueue is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T11:52:10.497Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:52:10.498Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:54:07.311Z"}
{"message":"{\"message\":\"Services.updateQueue is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T11:54:07.311Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:54:07.312Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:55:06.109Z"}
{"message":"{\"message\":\"Services is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T11:55:06.109Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:55:06.110Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-11-22T11:57:20.011Z"}
{"message":"{\"message\":\"API does not exist.\",\"statusCode\":404}","level":"error","timestamp":"2020-11-22T11:57:20.011Z"}
{"status":404,"level":"error","message":"undefined","timestamp":"2020-11-22T11:57:20.012Z"}
{"message":"{\"message\":\"jwt expired\",\"statusCode\":401}","level":"error","timestamp":"2020-11-22T11:58:13.131Z"}
{"name":"UnauthorizedError","message":"jwt expired","code":"invalid_token","status":401,"inner":{"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2020-11-22T10:11:20.000Z"},"level":"error","timestamp":"2020-11-22T11:58:13.132Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:58:22.136Z"}
{"message":"{\"message\":\"branchService.findById is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T11:58:22.137Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:58:22.138Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:59:24.999Z"}
{"message":"{\"message\":\"Services.getServiceQueue is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T11:59:25.000Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:59:25.000Z"}
{"message":"{\"message\":\"jwt expired\",\"statusCode\":401}","level":"error","timestamp":"2020-11-22T11:59:41.104Z"}
{"name":"UnauthorizedError","message":"jwt expired","code":"invalid_token","status":401,"inner":{"name":"TokenExpiredError","message":"jwt expired","expiredAt":"2020-11-19T04:07:38.000Z"},"level":"error","timestamp":"2020-11-22T11:59:41.105Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:59:57.619Z"}
{"message":"{\"message\":\"Services.findService is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T11:59:57.620Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T11:59:57.620Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:00:11.105Z"}
{"message":"{\"message\":\"Services.findService is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:00:11.105Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:00:11.105Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:00:22.679Z"}
{"message":"{\"message\":\"Services.findService is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:00:22.680Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:00:22.680Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:00:35.147Z"}
{"message":"{\"message\":\"Services.findService is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:00:35.148Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:00:35.149Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:00:45.115Z"}
{"message":"{\"message\":\"Services.findService is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:00:45.116Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:00:45.116Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:01:01.060Z"}
{"message":"{\"message\":\"Services.findService is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:01:01.060Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:01:01.061Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:01:10.612Z"}
{"message":"{\"message\":\"Services.findService is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:01:10.613Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:01:10.614Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:01:21.165Z"}
{"message":"{\"message\":\"Services.findService is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:01:21.166Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:01:21.167Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:01:41.015Z"}
{"message":"{\"message\":\"Services.findService is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:01:41.015Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:01:41.016Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:02:41.729Z"}
{"message":"{\"message\":\"Services.findService is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:02:41.730Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:02:41.730Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:02:54.788Z"}
{"message":"{\"message\":\"Services.findService is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:02:54.789Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:02:54.789Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:03:40.583Z"}
{"message":"{\"message\":\"Services.getServiceQueue is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:03:40.584Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:03:40.584Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:03:58.676Z"}
{"message":"{\"message\":\"Queue is not defined\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:03:58.677Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:03:58.677Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:04:42.627Z"}
{"message":"{\"message\":\"Queue is not defined\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:04:42.628Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:04:42.628Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:04:52.451Z"}
{"message":"{\"message\":\"Queue is not defined\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:04:52.451Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:04:52.452Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:05:15.297Z"}
{"message":"{\"message\":\"Services.getServiceDetails is not a function\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:05:15.297Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:05:15.298Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:05:32.395Z"}
{"message":"{\"message\":\"businessService is not defined\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:05:32.395Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:05:32.396Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:05:52.306Z"}
{"message":"{\"message\":\"queueService is not defined\",\"statusCode\":500}","level":"error","timestamp":"2020-11-22T12:05:52.306Z"}
{"level":"error","message":"undefined","timestamp":"2020-11-22T12:05:52.308Z"}
